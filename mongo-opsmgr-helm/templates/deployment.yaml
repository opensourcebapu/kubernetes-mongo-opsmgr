apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mongo-opsmgr.fullname" . }}-deployment
  labels:
    app.kubernetes.io/name: {{ include "mongo-opsmgr.name" . }}
    helm.sh/chart: {{ include "mongo-opsmgr.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mongo-opsmgr.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mongo-opsmgr.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
        runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
      # For custom Key generation/HA mode, this section needs work        
      # initContainers:
      #   - name: {{ .Chart.Name }}-init
      #     image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
      #     imagePullPolicy: {{ .Values.image.pullPolicy }}
      #     command:
      #       - "/bin/bash"
      #     args:
      #       - "-c"
      #       - "/opt/mongodb/mms/bin/mms-gen-key -u ${MMS_USER} -f ${ENC_KEY_PATH}"
      #     env:
      #       - name: MMS_USER
      #         value: {{ .Values.env.MMS_USER }}
      #       - name: ENC_KEY_PATH
      #default  value: /etc/mongodb-mms/gen.key
      #         value: {{ .Values.env.ENC_KEY_PATH }}
      #     volumeMounts:
      #       - name: mms-configs
      #         mountPath: /opt/mongodb/mms/conf
      #       - name: keyDir
      #         mode: 777
      #         mountPath: /etc/mongodb-mms/
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # Enable the command and args lines for debug mode 
          # command: [ "/bin/bash", "-c", "--" ]
          # args: [ "while true; do sleep 30; done;" ]
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
          volumeMounts:
            - name: mms-configs
              mountPath: /opt/mongodb/mms/conf
            - name: keydir
              mountPath: /etc/mongodb-mms/
              #To do - ideal permissions for this mount
              mode: 770
            - name: releasedir
              #To do - ideal permissions for this mount
              mountPath: /opt/mongodb/mms/mongodb-releases/
              mode: 770
          env:
            - name: MMS_USER
              value: {{ .Values.env.MMS_USER }}
            - name: ENC_KEY_PATH
     #default value: /etc/mongodb-mms/gen.key
              value: {{ .Values.env.ENC_KEY_PATH }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: mms-configs
          configMap:
            name: {{ include "mongo-opsmgr.fullname" . }}-configmap
        - name: keydir
      {{- if .Values.persistentVolume.keyVol.enabled }}
          persistentVolumeClaim:
            claimName: opsmgr-keyvol
      {{- else }}
          emptyDir:
      {{- end }}
        - name: releasedir
      {{- if .Values.persistentVolume.releaseVol.enabled }}
          persistentVolumeClaim:
            claimName: opsmgr-releasevol
      {{- else }}
          emptyDir:
      {{- end }}        
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}